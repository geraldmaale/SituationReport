@page "/account/resetpassword"
@using Microsoft.AspNetCore.Components
@inherits ResetPasswordBase
@layout AuthLayout

<PageInfo Title="Forgot Password" ApplicationName="@ApplicationName"></PageInfo>

@if (string.IsNullOrWhiteSpace(code))
{
    <div class="alert alert-danger">
        <h1 class="alert-danger text-center">Sorry, this was a bad request</h1>
    </div>
}
else
{
    
<div id="account" class="form-signin">
    <h4 class="mb-3 font-weight-normal text-center">Reset Your Password</h4>

    <RadzenCard>
        @if (!AuthState.IsSuccessful)
        {
            <EditForm Model="ResetPasswordModel" OnValidSubmit="@OnValidSubmit">
                <DataAnnotationsValidator />

                <div class="my-2">
                    <label>New Password</label>
                    <RadzenPassword Class="w-100" @bind-Value="@ResetPasswordModel.NewPassword" />
                    <ValidationMessage For="@(() => ResetPasswordModel.NewPassword)" />
                </div>

                <div class="my-2">
                    <label class="">Confirm Password</label>
                    <RadzenPassword Class="w-100" @bind-Value="@ResetPasswordModel.ConfirmPassword" />
                    <ValidationMessage For="@(() => ResetPasswordModel.ConfirmPassword)" />
                </div>

                <div class="align-content-between">
                    <RadzenButton BusyText="Processing ..."
                              IsBusy=@IsSubmitted
                              class="w-100"
                              ButtonType="ButtonType.Submit"
                              Text="Reset Password" />
                </div>

            </EditForm>
        }
        else
        {
            <div class="alert alert-success mt-4">@AuthState.Message</div>
            <a class="btn btn-success" style="align-content: end" href="identity/account/login">Login</a>
        }

        @if (AuthState.IsError)
        {
            <div class="text-danger mt-4">@AuthState.Message</div>
        }
    </RadzenCard>
</div>
}



